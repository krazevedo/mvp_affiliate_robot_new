
name: Shopee Offer Bot

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Executar sem publicar no Telegram (DRY_RUN=1)"
        type: boolean
        default: false
  schedule:
    - cron: "5 13 * * *"
    - cron: "5 20 * * *"
  push:
    branches: [ main ]
    paths:
      - "**/*.py"
      - "requirements.txt"
      - ".github/workflows/run_bot.yml"

concurrency:
  group: shopee-offer-bot
  cancel-in-progress: false

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      SHOPEE_PARTNER_ID: ${{ secrets.SHOPEE_PARTNER_ID }}
      SHOPEE_API_KEY: ${{ secrets.SHOPEE_API_KEY }}
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      DB_PATH: data/bot.db
      QUANTIDADE_DE_POSTS_POR_EXECUCAO: 6
      PAGINAS_A_VERIFICAR: 2
      ITENS_POR_PAGINA: 15
      MIN_RATING: "4.7"
      MIN_DISCOUNT: "0.15"
      MIN_IA_SCORE: "65"
      COOLDOWN_REPOSTAGEM_DIAS: "5"
      MAX_CATEGORY_SHARE: "0.5"
      DRY_RUN: ${{ inputs.dry_run && '1' || '0' }}
      IA_ENABLED: "1"
      IA_TOP_K: "6"
      IA_BATCH_SIZE: "6"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Python deps
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install --upgrade pip
            pip install google-generativeai "pydantic>=2,<3" requests
          fi

      - name: Restore DB cache (latest)
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: data
          key: bot-db-${{ github.run_id }}
          restore-keys: |
            bot-db-

      - name: Ensure folders & package init
        run: |
          mkdir -p data sql_migrations shopee_monorepo_modules
          if [ ! -f shopee_monorepo_modules/__init__.py ]; then
            echo "" > shopee_monorepo_modules/__init__.py
          fi

      - name: Apply DB migration via Python (no sqlite3 CLI)
        run: |
          python migrate_db.py --db "${{ env.DB_PATH }}" --sql sql_migrations/001_add_conversions.sql

      - name: Sync conversions (last 7 days)
        env:
          SHOPEE_PARTNER_ID: ${{ secrets.SHOPEE_PARTNER_ID }}
          SHOPEE_API_KEY: ${{ secrets.SHOPEE_API_KEY }}
          DB_PATH: data/bot.db
        run: |
          python conversions_sync.py --purchase-days 1 --complete-days 7

      - name: Run bot
        env:
          DRY_RUN: ${{ env.DRY_RUN }}
        run: |
          python shopee_bot.py

      - name: Upload DB artifact
        uses: actions/upload-artifact@v4
        with:
          name: bot-db
          path: data/bot.db
          if-no-files-found: warn
          retention-days: 7

      - name: Save DB cache (new version)
        if: always()
        uses: actions/cache/save@v4
        with:
          path: data
          key: bot-db-${{ github.run_id }}

  dashboard:
    needs: run
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download DB artifact
        uses: actions/download-artifact@v4
        with:
          name: bot-db
          path: data

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Build static dashboard (JSON + optional AI insights)
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          python site_builder.py --db data/bot.db --out site

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
